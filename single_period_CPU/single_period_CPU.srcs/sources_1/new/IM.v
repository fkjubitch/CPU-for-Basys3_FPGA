`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 2024/10/30 20:53:45
// Design Name: 
// Module Name: IM
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module IM(
    input RW_ENABLE,
    input [31:0] I_ADDR,
    input [31:0] I_DATA_IN,
    output reg [31:0] I_DATA_OUT
    );
    
    reg [7:0] I_STORAGE[255:0];
    
    initial begin
        I_DATA_OUT = 0;
    end
    
    //≤‚ ‘÷∏¡Ó
    initial begin
        {I_STORAGE[3],I_STORAGE[2],I_STORAGE[1],I_STORAGE[0]} = 32'b000011_00000_00001_0000000000001000;
        {I_STORAGE[7],I_STORAGE[6],I_STORAGE[5],I_STORAGE[4]} = 32'b001010_00000_00010_0000000000000010;
        {I_STORAGE[11],I_STORAGE[10],I_STORAGE[9],I_STORAGE[8]} = 32'b000000_00010_00001_0001100000000000;
        {I_STORAGE[15],I_STORAGE[14],I_STORAGE[13],I_STORAGE[12]} = 32'b000000_00011_00010_0010100000000010;
        {I_STORAGE[19],I_STORAGE[18],I_STORAGE[17],I_STORAGE[16]} = 32'b000000_00101_00010_0010000000001010; 
        {I_STORAGE[23],I_STORAGE[22],I_STORAGE[21],I_STORAGE[20]} = 32'b000000_00100_00010_0100000000001000; 
        {I_STORAGE[27],I_STORAGE[26],I_STORAGE[25],I_STORAGE[24]} = 32'b000000_00000_01000_0100000001000100;
        {I_STORAGE[31],I_STORAGE[30],I_STORAGE[29],I_STORAGE[28]} = 32'b010101_01000_00001_1111111111111110;
        {I_STORAGE[35],I_STORAGE[34],I_STORAGE[33],I_STORAGE[32]} = 32'b001110_00010_00110_0000000000000100;
        {I_STORAGE[39],I_STORAGE[38],I_STORAGE[37],I_STORAGE[36]} = 32'b001110_00110_00111_0000000000000000;
        {I_STORAGE[43],I_STORAGE[42],I_STORAGE[41],I_STORAGE[40]} = 32'b000011_00111_00111_0000000000001000;
        {I_STORAGE[47],I_STORAGE[46],I_STORAGE[45],I_STORAGE[44]} = 32'b010100_00111_00001_1111111111111110;
        {I_STORAGE[51],I_STORAGE[50],I_STORAGE[49],I_STORAGE[48]} = 32'b010011_00001_00010_0000000000000100;
        {I_STORAGE[55],I_STORAGE[54],I_STORAGE[53],I_STORAGE[52]} = 32'b010010_00001_01001_0000000000000100;
        {I_STORAGE[59],I_STORAGE[58],I_STORAGE[57],I_STORAGE[56]} = 32'b000011_00000_01010_1111111111111110;
        {I_STORAGE[63],I_STORAGE[62],I_STORAGE[61],I_STORAGE[60]} = 32'b000011_01010_01010_0000000000000001;
        {I_STORAGE[67],I_STORAGE[66],I_STORAGE[65],I_STORAGE[64]} = 32'b010110_01010_00000_1111111111111110;
        {I_STORAGE[71],I_STORAGE[70],I_STORAGE[69],I_STORAGE[68]} = 32'b001100_00010_01011_0000000000000010;
        {I_STORAGE[75],I_STORAGE[74],I_STORAGE[73],I_STORAGE[72]} = 32'b010111_00000000000000000000010011;
        {I_STORAGE[79],I_STORAGE[78],I_STORAGE[77],I_STORAGE[76]} = 32'b000000_00100_00010_0100000000001000;
        {I_STORAGE[83],I_STORAGE[82],I_STORAGE[81],I_STORAGE[80]} = 32'hffffffff;
    end
    
    always @(*) begin
        if(RW_ENABLE == 1) begin //∂¡
            I_DATA_OUT <= {I_STORAGE[I_ADDR+3],I_STORAGE[I_ADDR+2],I_STORAGE[I_ADDR+1],I_STORAGE[I_ADDR]};
        end
        else begin              //–¥ (∑«W)
            I_STORAGE[I_ADDR] <= I_DATA_IN[7:0];
            I_STORAGE[I_ADDR+1] <= I_DATA_IN[15:8];
            I_STORAGE[I_ADDR+2] <= I_DATA_IN[23:16];
            I_STORAGE[I_ADDR+3] <= I_DATA_IN[31:24];
        end
    end
    
endmodule
